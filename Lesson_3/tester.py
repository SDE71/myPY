empty_list2 = []
# первый вариант создания списка
print(type(empty_list2))
print(empty_list2)
# второй вариант обозначения списка
# это одноимённая команда конвертации в список list
empty_list1 = list()
print(empty_list1)
filled_list = [1, 23.234, True, None, 'Some string', [1, 2, 3, 4, 5]]
# заполненный лист = [интерджит, флоат, булио, нет, какая-нибудь строка, како-нибудь другой список]
print(filled_list)
# какие методы примены к списку?
# все правила индексации применимы и к списку
# при этом превый элемент имеет индекс 0, а последний элемент имеет индекс -1
# либо учитывая ноль цифра по порядку
# т.е. вместо букв и символов мы считаем элементы через запятую
print(filled_list[0])
print(filled_list[-1])
# можно вывести любой срез элементов из списка
print(filled_list[0:3])
# можно при выведении среза из списка указать любой шаг
print(filled_list[0:6:2])
# можно перевернуть список наоборот
print(filled_list[::-1])
# в элементе списка, являющимся в свою очередь тоже списком, можно сделать внутреннюю индексацию
# для чего сначала выводим элемент через индексацию первыми квадратными скобками,
# а потом вторыми квадратными скобками вызываем любой элемент этого списка через индексацию
print(filled_list[-1][4])
# если внутри элемента как список, есть ещё один список, то можем его тоже вывести и применить индексацию
filled_list2 = [1, 23.234, True, None, 'Some string', [1, 2, 3, 4, 5, ['One', 'Two', 'Three']]]
print(filled_list2[-1][5][2])
# можно вывести символ или букву из строки
print(filled_list2[-1][5][2][2])
# либо срез букв из строки
print(filled_list2[-1][5][2][2:6])
# можно сделать срез из списка. При этом тип данных сохраняется, но это будет список
print(filled_list2[0:4])
# проверяем тип и видим что выходит список
print(type(filled_list2))
# список позволяет хранить дублирующие данные
filled_list3 = (1, 2, 2, 2, 2, 2, 2)
print(filled_list3)
# это не является ошибкой
# это может пригодить подать какие-либо параметры, напримерЮ правда/ложь
filled_list4 = (True, False, True, True, False, True, False)
print(filled_list4)
# элементы в строке можно посчитать через метод len. Длина списка = количество элементов в списке
print(len(filled_list4))
